
#App Base server
server {
    listen 8095;
    listen [::]:8095;

    index index.php index.html;
    root /var/www/public;

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
        try_files $uri /index.php =404;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index index.php;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_read_timeout 600;
        include fastcgi_params;
    }

    access_log  /data/nginx/logs/castoro-access.log;
    error_log  /data/nginx/logs/castoro-error.log;
}


#Proxy pass map
map $request_method $all_DEFAULT {
    default 8097;
    PUT 8097;
    POST 8097;
    DELETE 8097;
}
map $request_method $only_GET {
    default 8095;
    PUT 8097;
    POST 8097;
    DELETE 8097;
}
map $request_method $only_GET_POST {
    default 8095;
    PUT 8097;
    POST 8095;
    DELETE 8097;
}
map $request_method $only_GET_DELETE {
    default 8095;
    PUT 8097;
    POST 8097;
    DELETE 8095;
}
map $request_method $only_GET_POST_DELETE {
    default 8095;
    PUT 8097;
    POST 8095;
    DELETE 8095;
}


#Proxy configuration for Jellyfin
server {
    listen 8096;
    listen [::]:8096;

    client_max_body_size 200M;

    #Fix for emby api
    location /emby {
        rewrite ^/emby(/.*)$ $1 break;

        proxy_pass http://127.0.0.1:8096;
        proxy_set_header Host $host:$server_port;
        proxy_set_header Port $server_port;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    #Torrent stream server
    location ~ ^/stream-torrent/(.*)$ {
        rewrite ^/stream-torrent/(.*)$ /stream/$1 break;
        proxy_pass http://127.0.0.1:3000;

        proxy_set_header Host $host;
        proxy_set_header Port $server_port;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    #MediaFlowProxy
    location /mfp/ {
        proxy_pass http://127.0.0.1:8888/;
        proxy_set_header Host $host;
        proxy_set_header Port $server_port;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    #Custom configuration page
    location /web/configurationpage {
        if ($args ~* "name=CSTR_CONF") {
            proxy_pass http://127.0.0.1:8095;
            break;
        }
        if ($args ~* "name=CSTR_ITEM") {
            proxy_pass http://127.0.0.1:8095;
            break;
        }
        if ($args ~* "pageType=PluginConfiguration") {
            proxy_pass http://127.0.0.1:8095;
            break;
        }
        proxy_pass http://127.0.0.1:8097;
    }

    #Custom configuration menu
    location /web/ConfigurationPages {
        if ($args ~* "enableInMainMenu=true") {
            proxy_pass http://127.0.0.1:8095;
            break;
        }
        proxy_pass http://127.0.0.1:8097;
    }

    #Jellyfin routes configuration
    location / {
        set $destination $all_DEFAULT;

        #Items Routes
        if ($uri ~ ^/Items$) {
            set $destination $only_GET;
        }
        if ($uri ~ ^/Items/([^/]+)$) {
            set $destination $only_GET_POST_DELETE;
        }
        if ($uri ~ ^/Items/Latest$) {
            set $destination $all_DEFAULT;
        }
        if ($uri ~ ^/Items/([^/]+)/ThemeMedia$) {
            set $destination $only_GET;
        }
        if ($uri ~ ^/Items/([^/]+)/Similar$) {
            set $destination $only_GET;
        }
        if ($uri ~ ^/Items/([^/]+)/PlaybackInfo$) {
            set $destination $only_GET_POST;
        }
        if ($uri ~ ^/Items/([^/]+)/MetadataEditor$) {
            set $destination $only_GET;
        }

        #Custom
        if ($uri ~ ^/Items/([^/]+)/UpdateRequest) {
            set $destination $only_GET;
        }
        if ($uri ~ ^/Items/([^/]+)/DeleteRequest) {
            set $destination $only_GET;
        }

        #User routes
        if ($uri ~ ^/UserViews$) {
            set $destination $only_GET;
        }
        if ($uri ~ ^/Users/([^/]+)/Items$) {
            set $destination $only_GET;
        }
        if ($uri ~ ^/Users/([^/]+)/Views$) {
            set $destination $only_GET;
        }
        if ($uri ~ ^/Users/([^/]+)/Items/([^/]+)$) {
            set $destination $only_GET;
        }
        if ($uri ~ ^/Users/([^/]+)/Items/Latest$) {
            set $destination $all_DEFAULT;
        }
        if ($uri ~ ^/Users/([^/]+)/Items/Resume$) {
            set $destination $all_DEFAULT;
        }
        if ($uri ~ ^/Users/([^/]+)/Items/Suggestions$) {
            set $destination $all_DEFAULT;
        }
        if ($uri ~ ^/Users/([^/]+)/Items/([^/]+)/PlaybackInfo$) {
            set $destination $only_GET;
        }
        if ($uri ~ ^/Users/([^/]+)/FavoriteItems/([^/]+)$) {
           set $destination $only_GET_POST_DELETE;
        }

        #Api keys routes
        if ($uri ~ ^/Auth/Keys$) {
            set $destination $only_GET_POST;
        }
        if ($uri ~ ^/Auth/Keys/([^/]+)$) {
            set $destination $only_GET_DELETE;
        }

        #Schedule tasks routes
        if ($uri ~ ^/ScheduledTasks$) {
            set $destination $only_GET;
        }
        #if ($uri ~ ^/ScheduledTasks/([^/]+)$) {
        #    set $destination $only_GET;
        #}
        if ($uri ~ ^/ScheduledTasks/Running/([^/]+)$) {
            set $destination $only_GET_POST;
        }

        #Other routes
        if ($arg_searchTerm) {
            set $destination $only_GET;
        }
        if ($uri = /Persons) {
            set $destination $all_DEFAULT;
        }
        if ($uri = /Artists) {
            set $destination $all_DEFAULT;
        }
        if ($uri = /Plugins) {
            set $destination $only_GET;
        }
        if ($uri = /Plugins/castoro/Configuration){
            set $destination $only_GET_POST_DELETE;
        }
        if ($uri = /Plugins/castoro-item/Configuration){
            set $destination $only_GET_POST_DELETE;
        }
        if ($uri = /Plugins/castoro-download/Configuration){
            set $destination $only_GET_POST_DELETE;
        }
        if ($uri = /Packages) {
            set $destination $only_GET;
        }
        if ($uri ~ ^/Startup/User$) {
            set $destination $only_GET_POST;
        }
        if ($uri ~ ^/Library/VirtualFolders$) {
            set $destination $only_GET_DELETE;
        }
        if ($uri ~ ^/System/Info/Public$) {
            set $destination $only_GET;
        }
        if ($uri ~ ^/System/Logs$) {
            set $destination $only_GET;
        }
        if ($uri ~ ^/System/Logs/Log$) {
            set $destination $only_GET;
        }
        if ($uri ~ ^/system/info/public$) {
            set $destination $only_GET;
        }
        if ($uri ~ ^/System/Configuration/network$) {
            set $destination $only_GET_POST;
        }
        if ($uri ~ ^/web/config.json$) {
            set $destination $only_GET;
        }
        if ($uri ~ ^/web/server.json$) {
            set $destination $only_GET;
        }

        #Disable proxed routes if client is different from browser or official app
        set $user_agent_enabled 0;
        if ($http_user_agent ~* "^Mozilla") {
            set $user_agent_enabled 1;
        }
        if ($http_user_agent ~* "^VidHub") {
            set $user_agent_enabled 1;
        }
        if ($http_user_agent ~* "^MediaCenter") {
            set $user_agent_enabled 1;
        }
        if ($user_agent_enabled = 0){
            set $destination $all_DEFAULT;
        }

        #Streams routes (always proxed)
        if ($uri ~ ^/stream$) {
            set $destination $only_GET;
        }
        #Fix for Infuse
        if ($uri ~ ^/Videos/([^/]+)/stream$) {
            set $destination $only_GET;
        }
        #Fix for MFP m3u
        if ($uri ~ ^/videos/([^/]+)/live.m3u8$) {
            set $destination $only_GET;
        }
        #if ($uri ~ ^/videos/([^/]+)/([^/]+)/([^/]+)/([^/]+).([^/]+)$) {
        #    set $destination $only_GET;
        #}
        #Items Download
        if ($uri ~ ^/Items/([^/]+)/Download) {
           set $destination $only_GET;
        }
        #Items Images
        if ($uri ~ ^/Items/([^/]+)/Images/([^/]+)$) {
            set $destination $only_GET;
        }

        #Exception
        if ($arg_cstrCall) {
            set $destination $all_DEFAULT;
        }

        #Customizations
        client_max_body_size 512M;

        #Proxy pass
        proxy_buffering off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-Proxy-To-SP $destination;
        proxy_set_header Referer $http_referer;
        proxy_set_header X-Referer $http_referer;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        #Cors disable
        add_header Access-Control-Allow-Origin '*';
        add_header Access-Control-Allow-Headers '*';
        add_header Access-Control-Allow-Methods '*';
        add_header Access-Control-Allow-Credentials 'true';
        add_header Accept '*';
        add_header Cache-Control 'no-cache, private';
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        proxy_pass http://127.0.0.1:$destination;
    }

    access_log  /data/nginx/logs/jellyfin-access.log;
    error_log  /data/nginx/logs/jellyfin-error.log;
}